// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) // Use UUID as the default value
  first_name String
  last_name  String
  email      String   @unique
  password   String
  role       String
  created_at DateTime
  last_login DateTime
  updated_at DateTime
  enumber    String   @unique

  courses UserCourse[]
}

model Course {
  course_id     String    @id
  course_name   String
  course_number String
  department_id String
  start_date    DateTime?
  end_date      DateTime?
  created_at    DateTime
  status        String

  resources  ResourceCourse[]
  users      UserCourse[]
  department Department       @relation(fields: [department_id], references: [department_id])
}

model UserCourse {
  enumber         String
  course_id       String
  enrollment_date DateTime?

  user   User   @relation(fields: [enumber], references: [enumber])
  course Course @relation(fields: [course_id], references: [course_id])

  @@id([enumber, course_id])
}

model Resource {
  resource_id   String @id
  resource_name String
  resource_type String

  courses ResourceCourse[]
}

model ResourceCourse {
  resource_id String
  course_id   String

  resource Resource @relation(fields: [resource_id], references: [resource_id])
  course   Course   @relation(fields: [course_id], references: [course_id])

  @@id([resource_id, course_id])
}

model Department {
  department_id           String @id
  department_name         String
  department_abbreviation String

  courses Course[]
}
